# Generated by Django 4.2.7 on 2025-09-23 01:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agents', '0001_initial'),
        ('github', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('developer_filter', models.CharField(blank=True, help_text='Filter by specific developer', max_length=255)),
                ('date_from', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('current_step', models.CharField(blank=True, max_length=255)),
                ('celery_task_id', models.CharField(blank=True, max_length=255)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_tasks', to='agents.aiagent')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_tasks', to='github.repository')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_analysis', models.TextField(help_text='Raw AI analysis response')),
                ('formatted_analysis', models.TextField(help_text='Formatted analysis for display')),
                ('total_commits', models.IntegerField(default=0)),
                ('total_additions', models.IntegerField(default=0)),
                ('total_deletions', models.IntegerField(default=0)),
                ('total_files_changed', models.IntegerField(default=0)),
                ('developer_stats', models.JSONField(default=dict, help_text='Developer-specific statistics')),
                ('tokens_used', models.IntegerField(default=0)),
                ('analysis_cost', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='analysis.analysistask')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('format', models.CharField(choices=[('excel', 'Excel (.xlsx)'), ('csv', 'CSV'), ('pdf', 'PDF'), ('json', 'JSON')], max_length=20)),
                ('include_charts', models.BooleanField(default=True)),
                ('include_raw_data', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.IntegerField(default=0, help_text='File size in bytes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the export file expires', null=True)),
                ('analysis_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='analysis.analysisresult')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('default_date_range_days', models.IntegerField(default=30)),
                ('default_developer_filter', models.CharField(blank=True, max_length=255)),
                ('default_export_format', models.CharField(choices=[('excel', 'Excel (.xlsx)'), ('csv', 'CSV'), ('pdf', 'PDF'), ('json', 'JSON')], default='excel', max_length=20)),
                ('default_include_charts', models.BooleanField(default=True)),
                ('default_include_raw_data', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.aiagent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='analysistask',
            index=models.Index(fields=['user', 'status'], name='analysis_an_user_id_7cdf76_idx'),
        ),
        migrations.AddIndex(
            model_name='analysistask',
            index=models.Index(fields=['repository', 'status'], name='analysis_an_reposit_946662_idx'),
        ),
        migrations.AddIndex(
            model_name='analysistask',
            index=models.Index(fields=['created_at'], name='analysis_an_created_f88d2f_idx'),
        ),
        migrations.AddIndex(
            model_name='analysisexport',
            index=models.Index(fields=['user', 'status'], name='analysis_an_user_id_977b62_idx'),
        ),
        migrations.AddIndex(
            model_name='analysisexport',
            index=models.Index(fields=['expires_at'], name='analysis_an_expires_f615d0_idx'),
        ),
    ]
