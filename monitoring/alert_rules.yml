# Prometheus Alert Rules for GitHub Analyzer

groups:
  - name: system_alerts
    rules:
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      # Low disk space
      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 10% on {{ $labels.instance }} filesystem {{ $labels.mountpoint }}"

  - name: application_alerts
    rules:
      # Application down
      - alert: ApplicationDown
        expr: up{job=~"django-backend|nginx"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Application is down"
          description: "{{ $labels.job }} has been down for more than 1 minute"

      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(django_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time"
          description: "95th percentile response time is above 2 seconds for more than 5 minutes"

      # High error rate
      - alert: HighErrorRate
        expr: rate(django_request_exceptions_total[5m]) / rate(django_requests_total[5m]) * 100 > 5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate"
          description: "Error rate is above 5% for more than 5 minutes"

      # Too many 4xx errors
      - alert: High4xxErrorRate
        expr: rate(nginx_http_requests_total{status=~"4.."}[5m]) / rate(nginx_http_requests_total[5m]) * 100 > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High 4xx error rate"
          description: "4xx error rate is above 10% for more than 5 minutes"

      # Too many 5xx errors
      - alert: High5xxErrorRate
        expr: rate(nginx_http_requests_total{status=~"5.."}[5m]) / rate(nginx_http_requests_total[5m]) * 100 > 1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "High 5xx error rate"
          description: "5xx error rate is above 1% for more than 2 minutes"

  - name: database_alerts
    rules:
      # Database down
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Database is down"
          description: "PostgreSQL database has been down for more than 1 minute"

      # High database connections
      - alert: HighDatabaseConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connections"
          description: "Database connections are above 80% of max connections"

      # Long running queries
      - alert: LongRunningQueries
        expr: pg_stat_activity_max_tx_duration > 300
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Long running database queries"
          description: "Database has queries running for more than 5 minutes"

      # Database size growth
      - alert: DatabaseSizeGrowth
        expr: increase(pg_database_size_bytes[1h]) > 1073741824  # 1GB
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "Rapid database growth"
          description: "Database size increased by more than 1GB in the last hour"

  - name: redis_alerts
    rules:
      # Redis down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 1 minute"

      # High Redis memory usage
      - alert: HighRedisMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is above 90% for more than 5 minutes"

      # Redis connection issues
      - alert: RedisConnectionIssues
        expr: redis_rejected_connections_total > 0
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Redis connection issues"
          description: "Redis is rejecting connections"

  - name: celery_alerts
    rules:
      # Celery worker down
      - alert: CeleryWorkerDown
        expr: celery_workers_active == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "No active Celery workers"
          description: "No Celery workers are active for more than 2 minutes"

      # High task queue length
      - alert: HighTaskQueueLength
        expr: celery_tasks_waiting > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High task queue length"
          description: "More than 100 tasks are waiting in the queue for more than 10 minutes"

      # Task failure rate
      - alert: HighTaskFailureRate
        expr: rate(celery_tasks_failed_total[5m]) / rate(celery_tasks_total[5m]) * 100 > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High task failure rate"
          description: "Task failure rate is above 10% for more than 5 minutes"

  - name: github_api_alerts
    rules:
      # GitHub API rate limit
      - alert: GitHubAPIRateLimitLow
        expr: github_api_rate_limit_remaining < 100
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "GitHub API rate limit low"
          description: "GitHub API rate limit remaining is below 100 requests"

      # GitHub API errors
      - alert: GitHubAPIErrors
        expr: rate(github_api_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "GitHub API errors"
          description: "GitHub API error rate is above 0.1 errors per second for more than 5 minutes"

  - name: security_alerts
    rules:
      # Too many failed login attempts
      - alert: HighFailedLoginAttempts
        expr: rate(django_login_failures_total[5m]) > 0.5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High failed login attempts"
          description: "Failed login attempt rate is above 0.5 per second for more than 5 minutes"

      # Suspicious user activity
      - alert: SuspiciousUserActivity
        expr: rate(django_suspicious_operations_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Suspicious user activity detected"
          description: "Suspicious operation rate is above 0.1 per second for more than 5 minutes"